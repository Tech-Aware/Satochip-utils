name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    timeout-minutes: 60  # AugmentÃ© pour donner plus de temps

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libpcsclite-dev swig python3-tk fuse libfuse2

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install swig
        brew install create-dmg

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-input -r requirements.txt
        pip install pyinstaller

    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --log-level DEBUG --onefile --add-data "pysatochip\pysatochip\cert\*;pysatochip/pysatochip/cert" --add-data "pictures_db\*;pictures_db" --add-data "pysatochip\pysatochip\CardConnector.py;pysatochip" satochip_utils.py --name satochip_utils.exe
      timeout-minutes: 30

    - name: Build AppImage (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --log-level DEBUG --onefile --add-data "pysatochip/pysatochip/cert/*:pysatochip/pysatochip/cert" --add-data "pictures_db/*:pictures_db" --add-data "pysatochip/pysatochip/CardConnector.py:pysatochip" satochip_utils.py --name satochip_utils
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        mkdir -p AppDir/usr/bin
        cp dist/satochip_utils AppDir/usr/bin/
        echo "[Desktop Entry]
        Name=Satochip Utils
        Exec=satochip_utils
        Icon=satochip_utils
        Type=Application
        Categories=Utility;" > AppDir/satochip_utils.desktop
        ./appimagetool-x86_64.AppImage AppDir
      timeout-minutes: 30

    - name: Build DMG (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --log-level DEBUG --onefile --add-data "pysatochip/pysatochip/cert/*:pysatochip/pysatochip/cert" --add-data "pictures_db/*:pictures_db" --add-data "pysatochip/pysatochip/CardConnector.py:pysatochip" satochip_utils.py --name satochip_utils
        create-dmg \
          --volname "Satochip Utils" \
          --window-pos 200 120 \
          --window-size 600 300 \
          --icon-size 100 \
          --icon "satochip_utils" 200 150 \
          --hide-extension "satochip_utils" \
          --app-drop-link 400 150 \
          "Satochip_Utils.dmg" \
          "dist/"
        # Compresser le DMG
        gzip -9 Satochip_Utils.dmg
      timeout-minutes: 30

    - name: Upload artifact (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: windows-satochip_utils
        path: dist/satochip_utils.exe
      timeout-minutes: 10

    - name: Upload artifact (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: linux-satochip_utils
        path: Satochip_Utils-x86_64.AppImage
      timeout-minutes: 10

    - name: Upload artifact (macOS)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v3
      with:
        name: macos-satochip_utils
        path: Satochip_Utils.dmg.gz
      timeout-minutes: 10